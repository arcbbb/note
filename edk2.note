load "C:\code\Rose310\Projects\RoseCityCrb\310\DEBUG_VS2008x86\IA32\Udk\001\IpmiPkg\IpmiManagerPei\IpmiManagerPei\DEBUG\IpmiManagerPei.efi" nocode at 0x00ffe803c0

###################   DEBUG
default:
DebugLib|MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
	DebugPrint -> {}

??:
DebugLib|IntelFrameworkModulePkg/Library/PeiDxeDebugLibReportStatusCode/PeiDxeDebugLibReportStatusCode.inf
	DebugPrint -> ReportStatus

DebugLib|MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort.inf
	DebugPrint -> SerialPortWrite(SerialPortLib)

	MdePkg/Library/BaseSerialPortLibNull/BaseSerialPortLibNull.inf
	SerialPortWrite -> {}

	PcAtChipsetPkg/Library/SerialIoLib/SerialIoLib.inf
	SerialPortWrite -> IoWrite8 (gUartBase)

	MdeModulePkg/Library/BaseSerialPortLib16550/BaseSerialPortLib16550.inf
	16550 UART

	RomleyPlatform:
	ServerCommonPkg/Library/SerialPortLibUsb/SerialPortLibUsb.inf
	SerialPortWrite -> UsbDbgOut

	ServerCommonPkg/Library/SerialPortLib/SerialPortLib.inf
	SerialPortWrite -> IoWrite8 (PcdGet64 (PcdSerialRegisterBase))


Uefi driver&App:
DebugLib|MdePkg/Library/UefiDebugLibConOut/UefiDebugLibConOut.inf
	DebugPrint -> gST->ConOut->OutputString (gST->ConOut, Buffer);
DebugLib|MdePkg/Library/UefiDebugLibStdErr/UefiDebugLibStdErr.inf  
	DebugPrint -> gST->StdErr->OutputString (gST->StdErr, Buffer);

PeCoffExtraActionLib|SourceLevelDebugPkg/Library/PeCoffExtraActionLibDebug/PeCoffExtraActionLibDebug.inf

## INF Updates
+[BuildOptions]
+  MSFT:*_*_*_CC_FLAGS = /Od /Oy-
################################
code organization:
1. grep "extern"
   should be move to .h header file
   no global guid instance, should be in AutoGen.c
2. examine guid
   every consumed sct guid should be checked

#####################################################
library not found
edk1: .inf:lib,  global lib directory
edk2: .inf:lib, .dsc:lib|path

header not found
edk2: .inf:[Packages], .dec:[Include]

how to build module
edk1: add inf to module/Build/{Library|Pei|Dxe}.dsc
edk2: add component to Build{Library|Pei|Dxe}.def
#####################################################

1. write INF
   determine include header in Autogen.h
   firmware type in FDF

   ####BaseTool/Source/Python/AutoGen/GenC.py
    MODULE_TYPE: UEFI_DRIVER, DXE_SMM_DRIVER
        affect: autogen.h #include default header
    "BASE"              :   [gBasicHeaderFile],
    "USER_DEFINED"      :   [gBasicHeaderFile]
    "SEC"               :   ["PiPei.h", "Library/DebugLib.h"],
    "PEI_CORE"          :   ["PiPei.h", "Library/DebugLib.h", "Library/PeiCoreEntryPoint.h"],
    "PEIM"              :   ["PiPei.h", "Library/DebugLib.h", "Library/PeimEntryPoint.h"],
    "DXE_CORE"          :   ["PiDxe.h", "Library/DebugLib.h", "Library/DxeCoreEntryPoint.h"],

     with "Library/UefiBootServicesTableLib.h", "Library/UefiDriverEntryPoint.h"],
    "DXE_DRIVER"        :   ["PiDxe.h", "Library/BaseLib.h", "Library/DebugLib.h", 
    "DXE_SMM_DRIVER"    :   ["PiDxe.h", "Library/BaseLib.h", "Library/DebugLib.h",
    "DXE_RUNTIME_DRIVER":   ["PiDxe.h", "Library/BaseLib.h", "Library/DebugLib.h",
    "DXE_SAL_DRIVER"    :   ["PiDxe.h", "Library/BaseLib.h", "Library/DebugLib.h"
    "UEFI_DRIVER"       :   ["Uefi.h",  "Library/BaseLib.h", "Library/DebugLib.h", 
    "UEFI_APPLICATION"  :   ["Uefi.h",  "Library/BaseLib.h", "Library/DebugLib.h","Library/UefiApplicationEntryPoint.h"],

    "SMM_CORE"          :   ["PiDxe.h", "Library/BaseLib.h", "Library/DebugLib.h", "Library/UefiDriverEntryPoint.h"],

   ####Grantley:PlatformPkg.fdf
    [Rule.Common.DXE_SMM_DRIVER]
    FILE SMM

        PeiDispatcher
	   else if (SearchType == PEI_CORE_INTERNAL_FFS_FILE_DISPATCH_TYPE) {
		if ((FfsFileHeader->Type == EFI_FV_FILETYPE_PEIM) ||
		    (FfsFileHeader->Type == EFI_FV_FILETYPE_COMBINED_PEIM_DRIVER) ||
		    (FfsFileHeader->Type == EFI_FV_FILETYPE_FIRMWARE_VOLUME_IMAGE)) {

        Dxe:CoreDispatcher
		EFI_FV_FILETYPE mDxeFileTypes[] = {
		  EFI_FV_FILETYPE_DRIVER,
		  EFI_FV_FILETYPE_COMBINED_SMM_DXE,
		  EFI_FV_FILETYPE_COMBINED_PEIM_DRIVER,
		  EFI_FV_FILETYPE_DXE_CORE,
		  EFI_FV_FILETYPE_FIRMWARE_VOLUME_IMAGE
		};
        SmmDispatcher
		EFI_FV_FILETYPE mSmmFileTypes[] = {
		  EFI_FV_FILETYPE_SMM,
		  EFI_FV_FILETYPE_COMBINED_SMM_DXE
		  //
		  // Note: DXE core will process the FV image file, so skip it in SMM core
		  // EFI_FV_FILETYPE_FIRMWARE_VOLUME_IMAGE
		  //
		};

2. compile time:*.c *.h
	 google the old code, and compare with the new code
3. link time: .inf, .dec,   //needs reparsing
     missing guid: add in .inf
     	if producer, define in .dec
4. remove SCT dependency:8
	inf depex,
	    4.1 grep OPTIN_, CONFIG_
	.c MACRO -> PcdGet
        .inf, .dec define Pcd
	.dsc how to override Pcd?
move to SCT:
	Dxe\Setup\IpmiManager.vfr   // recover vfrcompile

#### From EDK1 to EDK2

Check Entry prototype
in edk1 check PEIM entry using macro
in edk2 check PEIM entry using INF:ENTRYPOINT & autogen.h

GUID instance
in edk1 linked manually
    guid.h,guid.c
in edk2 linked with autogen.c generated from INF:[Ppi],DEC:[]
    guid.h -> reference module.c
           -> definition autogen.c -> use .inf -> define value .dec
    how to check value defined in .dec with value defined in guid.h?
    so value in guid.h is not really used/referenced.

link-time
.inf define LibraryClass
.dec define LibraryClasses Prototype
.dsc define LibraryClasses Instance

library   <---- reference   module 
.dec                        .inf: [Packages] pkg*.dec
.inf                        .h  : include <*.h>
                            .dsc: Lib|pkg*/lib*.inf

.inf: MODULE_TYPE -> autogen.h, autogen.c
Force Include:AutoGen.h, tools_def.txt: PP_FLAGS

#### INF
MODULE_TYPE choose from FDF[Rule] section
#### FDF
[Package]
FILE_TYPE
Ffs.py
Firmware File

GenC.pyi: "DXE_DRIVER"        :   ["PiDxe.h"]
./MdePkg/Include/PiDxe.h:#include <Uefi/UefiSpec.h>
./MdePkg/Include/PiSmm.h:#include <Uefi/UefiSpec.h>
./MdePkg/Include/Uefi.h:#include <Uefi/UefiSpec.h>
AutoGen.h

#### edk2 debug
notice Debug,c, Debug.h. Use GetPcd configuration
ASSERT_EFI_ERROR(Status);
ASSERT();
#### Semantic Change
ConvertTextToDevicePath    ->  EfiDevicePathFromTextProtocol->ConvertTextToDevicePath (DevicePathStr);
                               when to AppendDevicePathInstance() ?
GetNextGuidHob             ->  GetNextGuidHob


#### Syntax Change
Replace: 1.find 2.grep 3.awk 4. ex -s
Macro,Enum Change
    SCT_STATUS
    SCT_STATUS_NOT_FOUND
    SCT_STATUS_SUCCESS
    SCT_STATUS_DEVICE_ERROR
    SCT_STATUS_TIMEOUT
    SCT_STATUS_INVALID_PARAMETER
    SCT_STATUS_WARN_WRITE_FAILURE
    SCT_STATUS_UNSUPPORTED
    SCT_STATUS_OUT_OF_RESOURCES
    EFI_EVENT_NOTIFY_SIGNAL -> EVT_NOTIFY_SIGNAL
    EFI_EVENT_TIMER         -> EVT_TIMER
    EFI_TPL_HIGH_LEVEL      -> TPL_HIGH_LEVEL
    EFI_TPL_CALLBACK        -> TPL_CALLBACK
    EFI_TPL_NOTIFY          -> TPL_NOTIFY
    _CR                     -> BASE_CR @Base.h, CR @DebugLib.h

Override
    SCT_STATUS_INVALID_DATA      ->  EFI_INVALID_PARAMETER #CommonPorting.h
    SCT_STATUS_INVALID_REQUEST   ->  EFI_UNSUPPORTED       #CommonPorting.h

DEBUG
Global Variable
    gRT                       -> MdePkg.dec #include <Library/UefiRuntimeServicesTableLib.h>
    gBS                       -> MdePkg.dec #include <Library/UefiBootServicesTableLib.h>
Remove Function
    DxeInitializeDriverLib    -> Remove #EDKII INF:CONSTRUCTOR, AutoGen.c:ProcessLibraryConstructorList
MACRO related:
    EFI_PROTOCOL_DEFINITION   -> Remove
    EFI_FORWARD_DECLARATION   -> Remove
    EFI_PEIM_ENTRY_POINT      -> Remove #EDKII INF:ENTRYPOINT, AutoGen.h
    EFI_SIGNATURE_32          -> SIGNATURE_32
    ASSERT_EFI_ERROR          -> #include <Library/DebugLib.h> //MdePkg.dec

Guid C name changed:
    gEfiRscHandlerPpiGuid       -> gEfiPeiRscHandlerPpiGuid
    gPeiReadOnlyVariablePpiGuid -> gEfiPeiReadOnlyVariable2PpiGuid
    gPeiStallPpiGuid            -> gEfiPeiStallPpiGuid
    EFI_SMM_BASE_PROTOCOL_GUID  -> EFI_SMM_BASE2_PROTOCOL_GUID
    EFI_SMM_CONTROL_PROTOCOL_GUID->EFI_SMM_CONTROL2_PROTOCOL_GUID

TYPE Changed:
    EFI_RSC_HANDLER_PPI        -> EFI_PEI_RSC_HANDLER_PPI
    PEI_READ_ONLY_VARIABLE_PPI -> EFI_PEI_READ_ONLY_VARIABLE2_PPI
    PEI_STALL_PPI              -> EFI_PEI_STALL_PPI
    PEI_CPU_IO_PPI             -> EFI_PEI_CPU_IO_PPI
Qualifier:
    EFI_PEI_SERVICES           -> CONST EFI_PEI_SERVICES

FLAG Changed:
    ## Boot Service
    CreateEvent():
Service Changed:
    PeiGetVariable        -> GetVariable   *arg
	
Library Changed:

    EfiLibAllocateZeroPool     -> AllocateZeroPool #include <Library/MemoryAllocationLib.h>
    EfiLibAllocatePool         -> AllocatePool     #include <Library/MemoryAllocationLib.h>
    EfiCopyMem, EfiCommonLibCopyMem  -> CopyMem          #include <Library/BaseMemoryLib.h> MdePkg
    EfiZeroMem                 -> ZeroMem
    memcpy                     -> CopyMem //Initializing local variables, such as arrays or structures can
                                       //sometimes lead to the compiler inserting a memcpy.
    EfiStrCmp(CHAR16,CHAR16)   -> StrCmp           #BaseLib MdePkg

    EfiLibGetSystemConfigurationTable -> EfiGetSystemConfigurationTable //is it the same?
    GetPeiServices             -> GetPeiServicesTablePointer  #include <Library/PeiServicesTablePointerLib.h>

    GetNextGuidHob(x,y,z,w)    -> GetNextGuidHob(x,y)

    HexStringToBuf(UINT8,CHAR16) -> UnicodeStrToAsciiStr(CHAR16,CHAR8) #BaseLib MdePkg
    sprintf, SPrint            -> UnicodeSPrint, AsciiSPrint  #Library/PrintLib.h MdePkg
    strlen                     -> AsciiStrLen
    
Hii
    IsConfigHdrMatch                    -> HiiIsConfigHdrMatch  #IfrSupport -> HiiLib.h MdeModulePkg
    IfrLibSetString(1,2,3)              -> HiiSetString (1,2,3,NULL);
    IfrLibNewString                     -> Id = HiiSetString (1,2,NULL)
    HiiLibCreatePackageListDriverHandle -> InstallMultipleProtocols
    HiiLibGetPackage                    -> buggy function
    PreparePackageList, NewPackageList  -> HiiAddPackage
    HiiLibIfrCreateOpcode               -> HiiAllocateOpCodeHandle 
                                           HiiCreate.*OpCode 

Structure Member Changed
    ACPI_RESOURCE_HEADER_PTR  -> no raw member

VfrCompile
    exportdefaults

SMM
    EfiInitializeSmmDriverLib    -> dont trigger into SMM 

Dxe library
AcpiLibDuplicateResources
AcpiLibAppendIoPortResource
asctime_r
